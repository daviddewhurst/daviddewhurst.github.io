var annotated_dup =
[
    [ "Distributions", null, [
      [ "arity", "structDistributions_1_1arity.html", "structDistributions_1_1arity" ],
      [ "arity< Categorical >", "structDistributions_1_1arity_3_01Categorical_01_4.html", "structDistributions_1_1arity_3_01Categorical_01_4" ],
      [ "arity< DiscreteUniform >", "structDistributions_1_1arity_3_01DiscreteUniform_01_4.html", "structDistributions_1_1arity_3_01DiscreteUniform_01_4" ],
      [ "arity< Gamma >", "structDistributions_1_1arity_3_01Gamma_01_4.html", "structDistributions_1_1arity_3_01Gamma_01_4" ],
      [ "arity< Normal >", "structDistributions_1_1arity_3_01Normal_01_4.html", "structDistributions_1_1arity_3_01Normal_01_4" ],
      [ "arity< Poisson >", "structDistributions_1_1arity_3_01Poisson_01_4.html", "structDistributions_1_1arity_3_01Poisson_01_4" ],
      [ "arity< Uniform >", "structDistributions_1_1arity_3_01Uniform_01_4.html", "structDistributions_1_1arity_3_01Uniform_01_4" ],
      [ "Categorical", "classDistributions_1_1Categorical.html", "classDistributions_1_1Categorical" ],
      [ "DiscreteUniform", "classDistributions_1_1DiscreteUniform.html", "classDistributions_1_1DiscreteUniform" ],
      [ "Distribution", "classDistributions_1_1Distribution.html", null ],
      [ "Gamma", "classDistributions_1_1Gamma.html", "classDistributions_1_1Gamma" ],
      [ "Generate", "classDistributions_1_1Generate.html", "classDistributions_1_1Generate" ],
      [ "input_types", "structDistributions_1_1input__types.html", "structDistributions_1_1input__types" ],
      [ "input_types< Categorical >", "structDistributions_1_1input__types_3_01Categorical_01_4.html", "structDistributions_1_1input__types_3_01Categorical_01_4" ],
      [ "input_types< DiscreteUniform >", "structDistributions_1_1input__types_3_01DiscreteUniform_01_4.html", "structDistributions_1_1input__types_3_01DiscreteUniform_01_4" ],
      [ "input_types< Gamma >", "structDistributions_1_1input__types_3_01Gamma_01_4.html", "structDistributions_1_1input__types_3_01Gamma_01_4" ],
      [ "input_types< Normal >", "structDistributions_1_1input__types_3_01Normal_01_4.html", "structDistributions_1_1input__types_3_01Normal_01_4" ],
      [ "input_types< Poisson >", "structDistributions_1_1input__types_3_01Poisson_01_4.html", "structDistributions_1_1input__types_3_01Poisson_01_4" ],
      [ "input_types< Uniform >", "structDistributions_1_1input__types_3_01Uniform_01_4.html", "structDistributions_1_1input__types_3_01Uniform_01_4" ],
      [ "LogProb", "classDistributions_1_1LogProb.html", "classDistributions_1_1LogProb" ],
      [ "Normal", "classDistributions_1_1Normal.html", "classDistributions_1_1Normal" ],
      [ "Poisson", "classDistributions_1_1Poisson.html", "classDistributions_1_1Poisson" ],
      [ "StdDistribution", "classDistributions_1_1StdDistribution.html", "classDistributions_1_1StdDistribution" ],
      [ "Uniform", "classDistributions_1_1Uniform.html", "classDistributions_1_1Uniform" ]
    ] ],
    [ "AncestorMetropolis", "structAncestorMetropolis.html", "structAncestorMetropolis" ],
    [ "collection_t", "structcollection__t.html", "structcollection__t" ],
    [ "Filter", "structFilter.html", "structFilter" ],
    [ "GenericMetropolis", "structGenericMetropolis.html", "structGenericMetropolis" ],
    [ "has_proposal", "structhas__proposal.html", "structhas__proposal" ],
    [ "has_proposal< GenericMetropolis >", "structhas__proposal_3_01GenericMetropolis_01_4.html", "structhas__proposal_3_01GenericMetropolis_01_4" ],
    [ "has_proposal< ImportanceSampling >", "structhas__proposal_3_01ImportanceSampling_01_4.html", "structhas__proposal_3_01ImportanceSampling_01_4" ],
    [ "ImportanceSampling", "structImportanceSampling.html", "structImportanceSampling" ],
    [ "inf_options_t", "structinf__options__t.html", "structinf__options__t" ],
    [ "Inference", "structInference.html", "structInference" ],
    [ "LikelihoodWeighting", "structLikelihoodWeighting.html", "structLikelihoodWeighting" ],
    [ "MetropolisState", "structMetropolisState.html", "structMetropolisState" ],
    [ "node_t", "structnode__t.html", "structnode__t" ],
    [ "Optimizer", "classOptimizer.html", "classOptimizer" ],
    [ "plate", "structplate.html", "structplate" ],
    [ "proposal", "structproposal.html", "structproposal" ],
    [ "Queryer", "classQueryer.html", "classQueryer" ],
    [ "QueryerCollection", "classQueryerCollection.html", "classQueryerCollection" ],
    [ "record_collection_t", "structrecord__collection__t.html", "structrecord__collection__t" ],
    [ "record_t", "structrecord__t.html", "structrecord__t" ],
    [ "Score", "structScore.html", "structScore" ],
    [ "shared_static_plate", "structshared__static__plate.html", "structshared__static__plate" ],
    [ "static_plate", "structstatic__plate.html", "structstatic__plate" ],
    [ "transition", "structtransition.html", "structtransition" ],
    [ "value_collection_t", "structvalue__collection__t.html", "structvalue__collection__t" ],
    [ "Weighted", "classWeighted.html", "classWeighted" ],
    [ "WeightedMean", "classWeightedMean.html", "classWeightedMean" ],
    [ "WeightedRecord", "classWeightedRecord.html", "classWeightedRecord" ],
    [ "WeightedValue", "classWeightedValue.html", null ],
    [ "WeightedValue< std::unique_ptr< value_collection_t< V > >, O, Ts... >", "classWeightedValue_3_01std_1_1unique__ptr_3_01value__collection__t_3_01V_01_4_01_4_00_01O_00_01Ts_8_8_8_01_4.html", "classWeightedValue_3_01std_1_1unique__ptr_3_01value__collection__t_3_01V_01_4_01_4_00_01O_00_01Ts_8_8_8_01_4" ]
];